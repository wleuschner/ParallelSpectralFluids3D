#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

uniform vec3 aabb_min;
uniform vec3 aabb_extent;
layout(r32i,binding=0) uniform coherent iimage3D volumeTexture;
layout(std430,binding=1) buffer data
{
    vec4 pos[];
};

layout (local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main()
{
    int idx = int(gl_GlobalInvocationID.x);
    uvec3 dims = imageSize(volumeTexture);
    vec3 posNormalized = vec3(aabb_min+aabb_extent+pos[idx].xyz)/aabb_extent;
    //imageStore(volumeTexture,ivec3(idx%128),uvec4(600000));
    imageAtomicAdd(volumeTexture,ivec3(posNormalized.x*dims.x,posNormalized.y*dims.y,posNormalized.z*dims.z),1000);
    //imageAtomicAdd(volumeTexture,ivec3(0,0,0),1);

}

